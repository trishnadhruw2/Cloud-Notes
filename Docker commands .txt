https://docs.docker.com/engine/reference/commandline/docker/#child-commands

docker ps -Display all running docker containers
docker ps -a  --->Display all the docker container
docker run – Runs a command in a new container.
docker start – Starts one or more stopped containers
docker stop – Stops one or more running containers
docker build – Builds an image form a Docker file
docker pull – Pulls an image or a repository from a registry
docker push – Pushes an image or a repository to a registry
docker export – Exports a container’s filesystem as a tar archive
docker exec – Runs a command in a run-time container
docker search – Searches the Docker Hub for images
docker attach – Attaches to a running container
docker commit – Creates a new image from a container’s changes


Management Commands:
  config  	Manage Docker configs
  container     Manage containers
  image   	Manage images
  network 	Manage networks
  node    	Manage Swarm nodes
  plugin  	Manage plugins
  secret  	Manage Docker secrets
  service 	Manage services
  stack   	Manage Docker stacks
  swarm   	Manage Swarm
  system  	Manage Docker
  trust   	Manage trust on Docker images (experimental)
  volume  	Manage volumes

Commands:
  attach  	Attach local standard input, output, and error streams to a running container
  build   	Build an image from a Dockerfile
  commit  	Create a new image from a container's changes
  cp      	Copy files/folders between a container and the local filesystem
  create  	Create a new container
  diff     	Inspect changes to files or directories on a container's filesystem
  events  	Get real time events from the server
  exec    	Run a command in a running container
  export  	Export a container's filesystem as a tar archive
  history 	Show the history of an image
  images  	List images
  import  	Import the contents from a tarball to create a filesystem image
  info    	Display system-wide information
  inspect 	Return low-level information on Docker objects
  kill     	Kill one or more running containers
  load    	Load an image from a tar archive or STDIN
  login   	Log in to a Docker registry
  logout  	Log out from a Docker registry
  logs    	Fetch the logs of a container
  pause   	Pause all processes within one or more containers
  port    	List port mappings or a specific mapping for the container
  ps      	List containers
  pull    	Pull an image or a repository from a registry
  push    	Push an image or a repository to a registry
  rename  	Rename a container
  restart 	Restart one or more containers
  rm      	Remove one or more containers
  rmi     	Remove one or more images
  run     	Run a command in a new container
  save    	Save one or more images to a tar archive (streamed to STDOUT by default)
  search  	Search the Docker Hub for images
  start   	Start one or more stopped containers
  stats   	Display a live stream of container(s) resource usage statistics
  stop    	Stop one or more running containers
  tag     	Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top     	Display the running processes of a container
  unpause 	Unpause all processes within one or more containers
  update  	Update configuration of one or more containers
  version 	Show the Docker version information
  wait    	Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

---------------------------------------------------------------


docker run -i -t ubuntu /bin/bash
sudo docker ps
docker run --name my_first_ubuntu -i -t ubuntu /bin/bash
docker start b87d675c0a4b                                     ------------>Update your container Id
docker stop b87d675c0a4b                                      ------------>Update your container Id
docker attach cebf8a62c307                                    ------------>attach a terminal to a container that is running
sudo docker run --name my_daemonized -d ubuntu /bin/sh -c "while true; do echo my daemonized container; sleep 1; done "   ---->----->create a Daemonized Container
Docker ps -a    
docker logs my_daemonized
docker logs -f  my_daemonized                                 -------------->continues console entries happening in the container from outside
docker exec -d  my_daemonized mkdir /tmp/test                 -------------->run a process inside the Docker Container from outside
docker exec -i -t  my_daemonized /bin/bash                    -------------->get inside an already running daemonized container and execute your required actions
docker inspect my_daemonized                                  -------------->Fetching more details about your Docker Container
docker stop 7b487f35905f                                      -------------->delete a Docker Container
docker rm 7b487f35905f
docker run -p 8080:8080 -d glassfish                          -------------->Expose ports inside the container to outside
docker run --net host -d -t -v /opt/mountpoint:/mountpoint:rw 4ff5d45b02d4     ----------->Mount a volume inside a Docker Container